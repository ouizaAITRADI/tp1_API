import { Base } from './Base';
export declare class IsString extends Base {
    constructor(path: (string | number)[]);
    isAfter(date?: any): this;
    notAfter(date?: any): this;
    isAlpha(locale?: any): this;
    notAlpha(locale?: any): this;
    isAlphanumeric(locale?: any): this;
    notAlphanumeric(locale?: any): this;
    isAscii(): this;
    notAscii(): this;
    isBefore(date?: any): this;
    notBefore(date?: any): this;
    isBoolean(): this;
    notBoolean(): this;
    isByteLength(options: any): this;
    notByteLength(options: any): this;
    isCreditCard(): this;
    notCreditCard(): this;
    isCurrency(options: any): this;
    notCurrency(options: any): this;
    isDataURI(): this;
    notDataURI(): this;
    isDate(): this;
    notDate(): this;
    isDecimal(): this;
    notDecimal(): this;
    isDivisibleBy(num: any): this;
    notDivisibleBy(num: any): this;
    isEmail(options?: any): this;
    notEmail(options?: any): this;
    isEmpty(): this;
    notEmpty(): this;
    isFQDN(options?: any): this;
    notFQDN(options?: any): this;
    isFloat(options?: any): this;
    notFloat(options?: any): this;
    isFullWidth(): this;
    notFullWidth(): this;
    isHalfWidth(): this;
    notHalfWidth(): this;
    isHexColor(): this;
    notHexColor(): this;
    isHexadecimal(): this;
    notHexadecimal(): this;
    isIP(version?: any): this;
    notIP(version?: any): this;
    isISBN(version?: any): this;
    notISBN(version?: any): this;
    isISIN(): this;
    notISIN(): this;
    isISO8601(): this;
    notISO8601(): this;
    isIn(values: any): this;
    notIn(values: any): this;
    isInt(options?: any): this;
    notInt(options?: any): this;
    isJSON(): this;
    notJSON(): this;
    isLength(options: any): this;
    notLength(options: any): this;
    isLowercase(): this;
    notLowercase(): this;
    isMACAddress(): this;
    notMACAddress(): this;
    isMD5(): this;
    notMD5(): this;
    isMobilePhone(locale: any): this;
    notMobilePhone(locale: any): this;
    isMongoId(): this;
    notMongoId(): this;
    isMultibyte(): this;
    notMultibyte(): this;
    isNumeric(): this;
    notNumeric(): this;
    isSurrogatePair(): this;
    notSurrogatePair(): this;
    isURL(options?: any): this;
    notURL(options?: any): this;
    isUUID(version?: any): this;
    notUUID(version?: any): this;
    isUppercase(): this;
    notUppercase(): this;
    isVariableWidth(): this;
    notVariableWidth(): this;
    isWhitelisted(chars: any): this;
    notWhitelisted(chars: any): this;
    isMatch(regex: RegExp): this;
    notMatch(regex: RegExp): this;
    length(expected: number): this;
    lengthInRange(lower: number | undefined, upper?: number | undefined): this;
}
